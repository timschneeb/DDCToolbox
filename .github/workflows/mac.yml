name: MacOS builds

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: 
     - published
     - prereleased

jobs:
  build-mac64:
    runs-on: macos-10.15
        
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
 
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "10.3"
      
    - name: Initialize project
      run: | 
           mkdir build
           cd build
           qmake ../DDCToolbox.pro "CONFIG += CI" "CONFIG += no_tests"
    
    - name: Build
      run: |
           cd build
           make

    - name: Build .dmg
      run: | 
           cd build/src
           macdeployqt DDCToolbox.app -dmg
      
    - run: ls -la build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: DDCToolbox_mac64_dmg
        path: build/src/DDCToolbox.dmg
    

  publish-nightly:
    runs-on: ubuntu-latest
    needs: [build-mac64]
    steps:
    - name: Prepare version information (1/3)
      uses: oprypin/find-latest-tag@v1
      with:
        repository: ThePBone/DDCToolbox
        releases-only: true
      id: last_release  
      
    - name: Prepare version information (2/3)
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 6
    - name: Prepare version information (3/3)
      run: echo '::set-output name=version::${{steps.last_release.outputs.tag}}-${{steps.short-sha.outputs.sha}}'
      id: version
      
    - name: Download portable artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: DDCToolbox_mac64_dmg
        
    - name: Rename portable artifact
      run: mv DDCToolbox.dmg ddctoolbox_${{steps.version.outputs.version}}_mac64.dmg
      
    - name: Upload binary to nightly server
      uses: wlixcc/SFTP-Deploy-Action@v1.0
      with:
        username: 'tim'
        server: 'local.timschneeberger.me'
        port: 22
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} 
        local_path: './ddctoolbox_${{steps.version.outputs.version}}_mac64.dmg'
        remote_path: '/srv/http/nightly.timschneeberger.me/ddctoolbox-mac/'
        args: '-o ConnectTimeout=5'

  attach-to-release:
    runs-on: ubuntu-latest
    needs: [build-mac64]
    if: github.event_name == 'release'
    
    steps:
    - name: Prepare version information (1/3)
      uses: oprypin/find-latest-tag@v1
      with:
        repository: ThePBone/DDCToolbox
        releases-only: true
      id: last_release  
      
    - name: Prepare version information (2/3)
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 6
    - name: Prepare version information (3/3)
      run: echo '::set-output name=version::${{steps.last_release.outputs.tag}}-${{steps.short-sha.outputs.sha}}'
      id: version
      
    - name: Download portable artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: DDCToolbox_mac64_dmg
        
    - name: Rename portable artifact
      run: mv DDCToolbox.dmg ddctoolbox_${{steps.version.outputs.version}}_mac64.dmg
      
      
    - uses: AButler/upload-release-assets@v2.0
      with:
        files: '*.dmg'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
